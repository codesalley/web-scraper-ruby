#!/usr/bin/env ruby

require 'tty-prompt'
require_relative '../lib/fetch'
require_relative '../lib/export'
require 'ruby_figlet'

using RubyFiglet
moo = "salley \n web Scraper"
puts moo.art

repo_name_list = ['Internet URI', 'Local xml/html file', 'quit']
prompt = TTY::Prompt.new
selected = prompt.select('Where are we scraping from? ?', repo_name_list)
error = 'Check link 404'
# rubocop:disable Lint/UselessAssignment
option = ''
extension = ''
# rubocop:enable Lint/UselessAssignment
case selected
when 'Internet URI'
  puts 'paste url in here'
  option = gets.chomp
  response = FetchInternet.new(option)
  parsed_data = response.fetch_data
  return error if response.nil?

  search_data = Export.new(parsed_data)

  inter_options = ['search by css', 'search by html tags', 'search by custom html/css tags']
  search_prompt = TTY::Prompt.new
  search_option = search_prompt.select('how will you like to get your data', inter_options)
  case search_option
  when 'search by css'
    puts 'enter css selectiors ex. nav ul.menu li a ..'
    css_catch = gets.chomp
    css_data = search_data.search_by_css(css_catch)
    export_or_print = ['Export to csv', 'print to console']
    export_prompt = TTY::Prompt.new
    export_type = export_prompt.select('How will you like to handle your data ?', export_or_print)
    case export_type
    when 'Export to csv'
      search_data.export_to_cvs(css_data)
      p 'exported completed, filename: scrap.csv '

    when 'print to console'
      puts css_data
      puts "\n"
    end
  when 'search by xpath tags'
    puts 'enter xpath tags ex. //nav//ul//li/a or  //article//h2..'
    xpath = gets.chomp
    xpath_data = search_data.search_by_tags(xpath)
    export_or_print = ['Export to csv', 'print to console']
    export_prompt = TTY::Prompt.new
    export_type = export_prompt.select('How will you like to handle your data ?', export_or_print)
    case export_type
    when 'Export to csv'
      search_data.export_to_cvs(xpath_data)
      p 'exported completed, filename: scrap.csv '

    when 'print to console'
      puts xpath_data
      puts "\n"
    end
  when 'Mix selectors not recommended for beginners or non programmers '
    puts 'enter selector ex. nav ul.menu li a..'
    mixpath = gets.chomp
    mixpath_data = search_data.search_by_custom_input(mixpath)
    export_or_print = ['Export to csv', 'print to console']
    export_prompt = TTY::Prompt.new
    export_type = export_prompt.select('How will you like to handle your data ?', export_or_print)
    case export_type
    when 'Export to csv'
      search_data.export_to_cvs(mixpath_data)
      p 'exported completed, filename: scrap.csv '

    when 'print to console'
      puts mixpath_data
      puts "\n"
    end
  end
when 'Local xml/html file'
  puts 'paste path to file in here'
  option = gets.chomp
  puts 'the extension of the file, [HTML   XML]'
  extension = gets.chomp
  response = Fetchlocal.new(option, extension)
  lta = response.fetch_data
  local_ = Export.new(lta)
  local_data = local_.search_by_custom_input('ul li a p div header')
  print_options = ['Export to csv', 'Print to console']
  print_prompt = TTY::Prompt.new
  print_type = print_prompt.select('How do you want to read data ? ', print_options)

  case print_type
  when 'Export to csv'

    search_data.export_to_cvs(local_data)
    p 'exported completed, filename: scrap.csv '

  when 'Print to console'
    puts local_data
    puts "\n"
  end
when 'quit'
  exit
end
